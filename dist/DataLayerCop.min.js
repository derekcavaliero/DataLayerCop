/**!
 * DataLayerCop.js
 * 
 * A utility library to help enforce dataLayer conventions and syntax.
 * Because sometimes... you just need to be the bad ðŸ‘®.
 *
 * Author: Derek Cavaliero (@derekcavaliero)
 * Repository: https://github.com/derekcavaliero/datalayercop
 * Version: 1.0.beta
 * License: MIT
 */
class DataLayerCop{#e={};constructor(e={}){this.#e=Object.assign(this.#e,{dataLayer:"dataLayer",preferredCase:"snake",reportToUrl:!1,reportToDataLayer:!1,reportOnly:[],rules:[]},e),this.#t(),this.#r(),Array.isArray(this.#e.rules)&&this.#e.rules?.length?(this.#a(),this.#s().push({event:"datalayercop.loaded",rules:this.#e.rules})):this.#o("warn","No rules defined.")}#t(){window[this.#e.dataLayer]=window[this.#e.dataLayer]||[]}#s(){return window[this.#e.dataLayer]}#a(){var e=this,t=this.#s().push;this.#s().push=function(){let r;if(e.#n(arguments[0])){let t=arguments[0];"event"==t[0]&&(r=e.#i(t,"gtag"))}else e.#p("isObjectLiteral",arguments[0])&&(r=arguments[0],r?.event?.startsWith("gtm.")||(r=e.#i(r,"gtm")));if(r)return t(r)}}#r(){this.#e.rules=this.#e.rules.map((e=>(e.predefined&&delete(e=Object.assign({},this.#c(e.predefined),e)).predefined,e)))}#c(e){return{event_property_exists:{name:"Expect payload to include an `event` property.",assert:e=>e.hasOwnProperty("event")&&e.event.length,dropOnFail:!1,type:"gtm"},event_is_namespaced:{name:"Expect `event` property value to be prefixed with a namespace.",assert:e=>this.#p("isNamespaced",e.event),dropOnFail:!1,type:"gtm"},payload_properties_are_preferred_case:{name:`Expect all payload properties to match preferred case (${this.#e.preferredCase}).`,assert:e=>{const t=Object.keys(e);for(let e=0;e<t.length;e++)if(!this.#l(t[e]))return!1;return!0},dropOnFail:!1},event_is_preferred_case_after_namespace:{name:`Expect \`event\` property value to match preferred case (${this.#e.preferredCase}) after namespace.`,assert:e=>{if(!this.#p("isNamespaced",e.event))return!0;const t=e.event.split(".")[1];return this.#l(t)},dropOnFail:!1,type:"gtm"}}[e]||{}}#d(e={},t,r){let a={rule:e,payload:t,payloadType:r};return"function"!=typeof e.assert?(this.#o("warn","Rule object is missing assert method - skipping...",e),a.passed=!0,a):(a.passed=e.assert(t,r),a.passed||this.#o("warn",`${r} payload failed rule: ${e?.name}`,a),a)}#i(e,t){for(let r=0;r<this.#e.rules.length;r++){let a=this.#e.rules[r];if(a?.type&&a.type!==t)continue;let s=this.#d(a,e,t);if(!s.passed&&(this.#e.reportOnly.includes(a?.severity)&&(this.#u(s),this.#e.reportToUrl&&this.#g(s)),a.dropOnFail))return!1}return e}#o(e,t,r){console[e](`ðŸš¨ ${this.#e.dataLayer} Cop - ${t}`,r)}#u(e){!1!==this.#e.reportToDataLayer&&this.#s().push({event:"gtm.pageError","gtm.errorMessage":e.rule?.name,datalayercop:e})}#g(e){if(!this.#h(this.#e.reportToUrl))return void this.#o("warn",`Attempted to report to URL - but an invalid URL was provided (${this.#e.reportToUrl}).`,payload);let t={hostname:location.hostname,url:location.href,user_agent:navigator.userAgent};Object.assign(t,e),t.payload=this.#f(t.payload),navigator.sendBeacon(this.#e.reportToUrl,JSON.stringify(t))}#f(e,t){let r=JSON.parse(JSON.stringify(e));const a=Object.keys(r);for(let e=0;e<a.length;e++){let t=a[e],s=r[t];if("object"==typeof s){r[t]=this.#f(s);continue}new RegExp("name|email|tele|phone|address|street|country|city|state|province|region|zip|postal|country|birth|dob|born|gender|sex|race|ethnicity|height|weight|password","i").test(t)&&(r[t]="(redacted)")}return r}#n(e){return"[object Arguments]"===Object.prototype.toString.call(e)}#h(e){try{var t=new URL(e)}catch(e){return!1}return"https:"===t.protocol}#l(e){return DataLayerCop.getCommonPattern(this.#e.preferredCase).test(e)}#p(e,...t){return DataLayerCop[e].apply(this,t)}static getCommonPattern(e){switch(e){case"snake":return/^[a-z0-9_]+$/;case"camel":return/^[a-z0-9]+([A-Z][a-z0-9]+)*$/;case"pascal":return/^[A-Z][a-z0-9]+([A-Z][a-z0-9]+)*$/;case"namespaced":return/^([a-zA-Z0-9_]+\.)/;default:return e}}static isObjectLiteral(e){var t=e;return"object"==typeof e&&null!==e&&function(){for(;null!==Object.getPrototypeOf(t=Object.getPrototypeOf(t)););return Object.getPrototypeOf(e)===t}()}static isSnakeCase(e){return DataLayerCop.getCommonPattern("snake").test(e)}static isCamelCase(e){return DataLayerCop.getCommonPattern("camel").test(e)}static isPascalCase(e){return DataLayerCop.getCommonPattern("pascal").test(e)}static isNamespaced(e){return DataLayerCop.getCommonPattern("namespaced").test(e)}}
